C a6+sc+Crel-acq
{ [x] = 0; [y] = 0; [zero] = 0; }

P0 (atomic_int* x, volatile int* y) {
  *y = 1;
  atomic_store_explicit(x, 1, memory_order_seq_cst);
}

P1 (atomic_int* x, atomic_int* y, atomic_int* zero) {
  int r0 = atomic_load_explicit(x, memory_order_relaxed);
  if (r0) {
    atomic_thread_fence(memory_order_acquire);
    atomic_compare_exchange_strong_explicit(y, zero, 1, memory_order_acq_rel, memory_order_relaxed);
  }
}
