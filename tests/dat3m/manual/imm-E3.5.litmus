C imm-E3.5

(*
 * Bridging the Gap between Programming Languages and Hardware Weak Memory Models
 *)

{
    int y[2] = {0, 0};
}

P0 (int* x, int* y) {
    int r0 = atomic_load_explicit(x, memory_order_relaxed);
    int r1 = atomic_load_explicit(y+r0, memory_order_relaxed);
    atomic_store_explicit(y, 1, memory_order_relaxed);
}

P1 (int* x, int* y) {
    int r0 = atomic_load_explicit(y, memory_order_relaxed);
    atomic_store_explicit(x, 1, memory_order_release);
}

exists (0:r0=1 /\ 1:r0=1)
